{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","services/subject.service.js","constants/levelMap.js","views/_EduManagerViews/EduManagerSubjectDetails/components/General/components/ProfileDetails/ProfileDetails.js","views/_EduManagerViews/EduManagerSubjectDetails/components/General/components/SuccessSnackbar/SuccessSnackbar.js","views/_EduManagerViews/EduManagerSubjectDetails/components/General/components/GeneralSettings/GeneralSettings.js","views/_EduManagerViews/EduManagerSubjectDetails/components/General/General.js","views/_EduManagerViews/EduManagerSubjectDetails/components/Header/Header.js","views/_EduManagerViews/EduManagerSubjectDetails/components/Notifications/Notifications.js","views/_EduManagerViews/EduManagerSubjectDetails/EduManagerSubjectDetails.js","views/_EduManagerViews/EduManagerSubjectDetails/components/Security/Security.js","views/_EduManagerViews/EduManagerSubjectDetails/components/Subscription/Subscription.js"],"names":["createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","name","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","_React$useState","exited","setExited","handleClose","useEventCallback","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","handlePause","handleResume","window","addEventListener","removeEventListener","ClickAwayListener","onClickAway","event","appear","in","createChainedFunction","timeout","direction","SnackbarContent","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","_defineProperty","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","_props$role","role","Paper","square","elevation","emphasis","emphasize","background","default","typography","body2","getContrastText","flexWrap","padding","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft","marginRight","SubjectService","subject_id","axios","get","data","post","put","levelMap","easy","medium","hard","makeStyles","content","flexDirection","textAlgin","marginTop","spacing","avatar","height","width","removeBotton","useStyles","colors","green","SuccessSnackbar","variant","defaultProps","saveButton","white","confirmDelete","deleteButton","red","borderColor","GeneralSettings","subject","rest","useState","openSnackbar","setOpenSnackbar","anchorEl","setAnchorEl","form","useForm","Card","onSubmit","handleSubmit","_updateOne","id","then","alert","catch","CardHeader","title","Divider","CardContent","Grid","container","item","md","xs","TextField","fullWidth","label","register","defaultValue","required","level","select","Object","keys","map","key","MenuItem","value","description","multiline","rows","CardActions","Button","formState","isSubmitting","onClick","currentTarget","Popover","transformOrigin","Box","Typography","gutterBottom","style","General","setSubject","useEffect","_getOne","res","lg","xl","Header","component","overview","down","product","productImage","details","notice","values","maxWidth","margin","tabs","divider","grey","EduManagerSubjectDetails","match","params"],"mappings":"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","file":"static/js/6.bc987164.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import axios from './axios';\n\nclass SubjectService {\n  static _getOne(subject_id) {\n    return axios.get('/subjects/' + subject_id);\n  }\n\n  static _getAll() {\n    return axios.get('/subjects');\n  }\n\n  static _createOne(data) {\n    return axios.post('/subjects', data);\n  }\n\n  static _updateOne(subject_id, data) {\n    return axios.put('/subjects/' + subject_id, data);\n  }\n}\n\nexport default SubjectService;\n","const levelMap = {\n  easy: 'Dễ',\n  medium: 'Trung bình',\n  hard: 'Khó'\n};\n\nexport default levelMap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Avatar,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlgin: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  },\n  removeBotton: {\n    width: '100%'\n  }\n}));\n\nconst ProfileDetails = props => {\n  const { profile, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <Avatar\n          className={classes.avatar}\n          src={profile.avatar}\n        />\n        <Typography\n          className={classes.name}\n          gutterBottom\n          variant=\"h3\"\n        >\n          {profile.firstName} {profile.lastName}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {profile.state}, {profile.country}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {profile.timezone}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          className={classes.removeBotton}\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst SuccessSnackbar = props => {\n  const { open, onClose } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        }\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n};\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  TextField,\n  Typography,\n  colors,\n  MenuItem,\n  Box,\n  Popover\n} from '@material-ui/core';\n\nimport SuccessSnackbar from '../SuccessSnackbar';\nimport { useForm } from 'react-hook-form';\nimport levelMap from 'constants/levelMap';\nimport SubjectService from 'services/subject.service';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  },\n  confirmDelete: {\n    padding: '0.5rem'\n  },\n  deleteButton: {\n    color: colors.red[600],\n    borderColor: colors.red[600],\n    backgroundColor: 'white'\n  }\n}));\n\nconst GeneralSettings = props => {\n  const { className, subject, ...rest } = props;\n\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const form = useForm();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onSubmit = data => {\n    return SubjectService._updateOne(subject.id, data)\n      .then(() => alert('Cập nhật thành công'))\n      .catch(() => alert('Lối'));\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardHeader title=\"Thông tin môn học\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={4}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Tên môn học\"\n                {...form.register('name')}\n                defaultValue={subject.name}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Độ khó\"\n                {...form.register('level')}\n                defaultValue={subject.level}\n                required\n                select\n                variant=\"outlined\">\n                {Object.keys(levelMap).map(key => (\n                  <MenuItem value={key}>{levelMap[key]}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Mô tả\"\n                {...form.register('description')}\n                defaultValue={subject.description}\n                multiline\n                required\n                rows={8}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            disabled={form.formState.isSubmitting}\n            type=\"submit\"\n            variant=\"contained\">\n            Lưu thay đổi\n          </Button>\n          <Button\n            className={classes.deleteButton}\n            onClick={handleClick}\n            variant=\"outlined\">\n            Xóa\n          </Button>\n          <Popover\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center'\n            }}\n            onClose={handleClose}\n            open={anchorEl}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center'\n            }}>\n            <Box className={classes.confirmDelete}>\n              <Typography gutterBottom>Delete this course?</Typography>\n              <Button onClick={handleClose} variant=\"outlined\">\n                Hủy\n              </Button>\n              <Button style={{ marginLeft: '0.5rem', color: colors.red[600] }}>\n                Xác nhận\n              </Button>\n            </Box>\n          </Popover>\n        </CardActions>\n      </form>\n      <SuccessSnackbar onClose={handleSnackbarClose} open={openSnackbar} />\n    </Card>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  subject: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { GeneralSettings } from './components';\nimport SubjectService from 'services/subject.service';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General = props => {\n  const { className, subject_id, ...rest } = props;\n\n  const classes = useStyles();\n  const [subject, setSubject] = useState(null);\n\n  useEffect(() => {\n    SubjectService._getOne(subject_id).then(res =>\n      setSubject(res.data.subject)\n    );\n  }, []);\n\n  if (!subject) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}>\n      <Grid item lg={8} md={6} xl={9} xs={12}>\n        <GeneralSettings subject={subject} />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  subject_id: PropTypes.string\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Typography component=\"h2\" gutterBottom variant=\"overline\">\n        Thông tin\n      </Typography>\n      <Typography component=\"h1\" variant=\"h3\">\n        Môn học\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Notifications\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email alerts\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Text message\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label={\n                  <Fragment>\n                    <Typography variant=\"body1\">Phone calls</Typography>\n                    <Typography variant=\"caption\">\n                      Short voice phone updating you\n                    </Typography>\n                  </Fragment>\n                }\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push notifications\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, colors } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport { Header, General } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst EduManagerSubjectDetails = props => {\n  const { match } = props;\n  const classes = useStyles();\n  const { id } = match.params;\n\n  return (\n    <Page className={classes.root} title=\"Settings\">\n      <Header />\n\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        <General subject_id={id} />\n      </div>\n    </Page>\n  );\n};\n\nEduManagerSubjectDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default EduManagerSubjectDetails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Button,\n  Divider,\n  TextField,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Security = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const valid = values.password && values.password === values.confirm;\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Change password\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Security\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Confirm password\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          disabled={!valid}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Typography\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  action: {\n    marginRight: 0,\n    marginTop: 0\n  },\n  overview: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  product: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  },\n  notice: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Subscription = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchSubscription = () => {\n      axios.get('/api/account/subscription').then(response => {\n        if (mounted) {\n          setSubscription(response.data.subscription);\n        }\n      });\n    };\n\n    fetchSubscription();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        }\n        classes={{ action: classes.action }}\n        title=\"Manage your subscription\"\n      />\n      <Divider />\n      <CardContent>\n        <Card>\n          <CardContent className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <div className={classes.product}>\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/images/products/product_freelancer.svg\"\n              />\n              <Typography variant=\"overline\">{subscription.name}</Typography>\n            </div>\n          </CardContent>\n          <Divider />\n          <CardContent className={classes.details}>\n            <div>\n              <Typography variant=\"body1\">\n                {subscription.proposalsLeft} proposals left\n              </Typography>\n              <Typography variant=\"body1\">\n                {subscription.templatesLeft} templates\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body1\">\n                {subscription.invitesLeft} invites left\n              </Typography>\n              <Typography variant=\"body1\">\n                {subscription.adsLeft} ads left\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography variant=\"body1\">Analytics dashboard</Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography variant=\"body1\">Email alerts</Typography>\n              )}\n            </div>\n          </CardContent>\n          <Divider />\n        </Card>\n        <Typography\n          className={classes.notice}\n          variant=\"body2\"\n        >\n          The refunds don't work once you have the subscription, but you can\n          always{' '}\n          <Link\n            color=\"secondary\"\n            component={RouterLink}\n            to=\"#\"\n          >\n            Cancel your subscription\n          </Link>\n          .\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n"],"sourceRoot":""}