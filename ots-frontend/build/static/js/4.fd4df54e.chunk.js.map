{"version":3,"sources":["../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/MailOutline.js","../node_modules/@material-ui/icons/NotInterested.js","services/staff.service.js","constants/roleMap.js","../node_modules/@material-ui/icons/LockOpenRounded.js","views/_AdminViews/AdminStaffDetails/components/Header/Header.js","views/_AdminViews/AdminStaffDetails/components/Overview/components/CustomerInfo/components/CustomerEdit/CustomerEdit.js","views/_AdminViews/AdminStaffDetails/components/Overview/components/CustomerInfo/CustomerInfo.js","views/_AdminViews/AdminStaffDetails/components/Overview/components/Invoices/Invoices.js","views/_AdminViews/AdminStaffDetails/components/Overview/components/SendEmails/SendEmails.js","views/_AdminViews/AdminStaffDetails/components/Overview/components/OtherActions/OtherActions.js","views/_AdminViews/AdminStaffDetails/components/Overview/Overview.js","views/_AdminViews/AdminStaffDetails/components/Invoices/Invoices.js","views/_AdminViews/AdminStaffDetails/components/Logs/Logs.js","views/_AdminViews/AdminStaffDetails/AdminStaffDetails.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","StaffService","staff_id","axios","get","role","data","post","user_id","put","roleMap","accountant","admin","instructor","useStyles","makeStyles","root","Header","props","className","rest","classes","clsx","Typography","component","gutterBottom","variant","theme","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","container","marginTop","spacing","actions","justifyContent","saveButton","color","palette","white","backgroundColor","colors","green","CustomerEdit","open","onClose","staff","setStaff","form","useForm","onSubmit","a","_updateOne","uid","then","res","alert","console","log","catch","Modal","Card","handleSubmit","CardContent","align","Grid","item","md","xs","TextField","defaultValue","displayName","fullWidth","label","register","required","email","phone","bank_name","bank_account_number","customClaims","select","keys","map","key","MenuItem","CardActions","Button","onClick","disabled","formState","isSubmitting","defaultProps","content","padding","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","StaffInfo","useState","openEdit","setOpenEdit","CardHeader","title","Divider","Table","TableBody","TableRow","selected","TableCell","Invoices","sendButton","mailIcon","table","cell","mainActions","display","notice","deleteButton","error","main","dark","enableButton","success","OtherActions","loading","setLoading","full_name","finally","Overview","useEffect","_getOne","lg","xl","CustomerInfo","inner","minWidth","invoices","setInvoices","mounted","response","statusColors","pending","orange","paid","rejected","red","action","TableHead","invoice","id","split","shift","moment","date","format","description","paymentMethod","currency","status","RouterLink","size","to","methodCell","statusCell","Logs","logs","setLogs","options","suppressScrollY","method","route","desc","IP","created_at","tabs","divider","grey","AdminStaffDetails","match","history","params","tab","find","t","Tabs","onChange","event","push","scrollButtons","Tab"],"mappings":"2IAEA,IAAIA,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,wJACD,QAEJN,EAAQE,QAAUE,G,kCCjBlB,IAAIT,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,+HACD,eAEJN,EAAQE,QAAUE,G,kCCjBlB,IAAIT,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mPACD,iBAEJN,EAAQE,QAAUE,G,+DCjBZG,E,4FACJ,SAAeC,GACb,OAAOC,IAAMC,IAAI,UAAYF,K,qBAE/B,WACE,OAAOC,IAAMC,IAAI,a,2BAGnB,SAAqBC,GACnB,OAAOF,IAAMC,IAAI,gBAAkBC,K,wBAErC,SAAkBC,GAChB,OAAOH,IAAMI,KAAK,UAAWD,K,wBAE/B,SAAkBE,EAASF,GACzB,OAAOH,IAAMM,IAAI,WAAaD,EAASF,O,KAI5BL,O,kCCbAS,IARC,CACdC,WAAY,kBACZC,MAAO,QACPC,WAAY,qBACZ,cAAe,uCACf,SAAU,4E,kCCHZ,IAAIxB,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,+VACD,mBAEJN,EAAQE,QAAUE,G,2MCbZgB,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAqBOC,EAlBA,SAAAC,GACb,IAAQC,EAAuBD,EAAvBC,UAAcC,EAAtB,YAA+BF,EAA/B,GAEMG,EAAUP,IAEhB,OACE,yCAASM,EAAT,CAAeD,UAAWG,YAAKD,EAAQL,KAAMG,KAC3C,kBAACI,EAAA,EAAD,CAAYC,UAAU,KAAKC,cAAY,EAACC,QAAQ,YAAhD,qB,yPCGAZ,EAAYC,aAAW,SAAAY,GAAK,MAAK,CACrCX,KAAM,CACJY,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,QAAS,OACTC,UAAWN,EAAMO,QAAQ,IACzBC,MAAO,IACPC,UAAW,OACXC,UAAW,OACXC,SAAU,QAEZC,UAAW,CACTC,UAAWb,EAAMc,QAAQ,IAE3BC,QAAS,CACPC,eAAgB,YAElBC,WAAY,CACVC,MAAOlB,EAAMmB,QAAQC,MACrBC,gBAAiBC,IAAOC,MAAM,KAC9B,UAAW,CACTF,gBAAiBC,IAAOC,MAAM,WAK9BC,EAAe,SAAAjC,GAAU,IAAD,EACpBkC,EAAuDlC,EAAvDkC,KAAMC,EAAiDnC,EAAjDmC,QAASC,EAAwCpC,EAAxCoC,MAAOC,EAAiCrC,EAAjCqC,SAAUpC,EAAuBD,EAAvBC,UAAcC,EAAtD,YAA+DF,EAA/D,GAEMG,EAAUP,IACV0C,EAAOC,cAEPC,EAAQ,uCAAG,WAAMpD,GAAN,SAAAqD,EAAA,+EACR1D,IAAa2D,WAAWN,EAAMO,IAAKvD,GACvCwD,MAAK,SAAAC,GACJC,MAAM,uCACNT,EAASQ,EAAIzD,KAAKgD,OAClBW,QAAQC,IAAIH,EAAIzD,KAAKgD,UAEtBa,OAAM,kBAAMH,MAAM,mCAPN,2CAAH,sDAUd,OAAKZ,EAKH,kBAACgB,EAAA,EAAD,CAAOf,QAASA,EAASD,KAAMA,GAC7B,kBAACiB,EAAA,EAAD,iBAAUjD,EAAV,CAAgBD,UAAWG,YAAKD,EAAQL,KAAMG,KAC5C,0BAAMuC,SAAUF,EAAKc,aAAaZ,IAChC,kBAACa,EAAA,EAAD,KACE,kBAAChD,EAAA,EAAD,CAAYiD,MAAM,SAAS/C,cAAY,EAACC,QAAQ,MAAhD,oDAGA,kBAAC+C,EAAA,EAAD,CAAMtD,UAAWE,EAAQkB,UAAWA,WAAS,EAACE,QAAS,GACrD,kBAACgC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,eACEC,aAAcxB,EAAMyB,YACpBC,WAAS,EACTC,MAAM,kBACFzB,EAAK0B,SAAS,aAJpB,CAKEC,UAAQ,EACRzD,QAAQ,eAGZ,kBAAC+C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,eACEC,aAAcxB,EAAM8B,MACpBJ,WAAS,EACTC,MAAM,SACFzB,EAAK0B,SAAS,SAJpB,CAKEC,UAAQ,EACRzD,QAAQ,eAIZ,kBAAC+C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,eACEC,aAAcxB,EAAM+B,MACpBL,WAAS,EACTC,MAAM,OACFzB,EAAK0B,SAAS,SAJpB,CAKEC,UAAQ,EACRzD,QAAQ,eAGZ,kBAAC+C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,eACEC,aAAcxB,EAAMgC,UACpBN,WAAS,EACTC,MAAM,0BACFzB,EAAK0B,SAAS,aAJpB,CAKEC,UAAQ,EACRzD,QAAQ,eAIZ,kBAAC+C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,eACEC,aAAcxB,EAAMiC,oBACpBP,WAAS,EACTC,MAAM,6CACFzB,EAAK0B,SAAS,uBAJpB,CAKEC,UAAQ,EACRzD,QAAQ,eAIZ,kBAAC+C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,eACEC,aAAY,UAAExB,EAAMkC,oBAAR,aAAE,EAAoBnF,KAClC2E,WAAS,EACTC,MAAM,oBACNQ,QAAM,GACFjC,EAAK0B,SAAS,QALpB,CAMEC,UAAQ,EACRzD,QAAQ,aACPlC,OAAOkG,KAAKhF,KAASiF,KAAI,SAAAC,GAAG,OAC3B,kBAACC,EAAA,EAAD,CAAUD,IAAKA,EAAKjG,MAAOiG,GACxBlF,IAAQkF,WAOrB,kBAACE,EAAA,EAAD,CAAa3E,UAAWE,EAAQqB,SAC9B,kBAACqD,EAAA,EAAD,CAAQC,QAAS3C,EAAS3B,QAAQ,aAAlC,SAGA,kBAACqE,EAAA,EAAD,CACE5E,UAAWE,EAAQuB,WACnBqD,SAAUzC,EAAK0C,UAAUC,aACzBH,QAASxC,EAAKc,aAAaZ,GAC3BhC,QAAQ,aAJV,YAvFD,MAqGXyB,EAAa4B,YAAc,eAU3B5B,EAAaiD,aAAe,CAC1BhD,MAAM,EACNC,QAAS,cAGIF,Q,mCChKTrC,EAAYC,aAAW,SAAAY,GAAK,MAAK,CACrCX,KAAM,GACNqF,QAAS,CACPC,QAAS,GAEX5D,QAAS,CACP6D,cAAe,SACfC,WAAY,aACZ,YAAa,CACXC,WAAY,IAGhBC,WAAY,CACVC,YAAahF,EAAMc,QAAQ,QAoEhBmE,EAhEG,SAAA1F,GAAU,IAAD,EACjBoC,EAAwCpC,EAAxCoC,MAAOnC,EAAiCD,EAAjCC,UAAWoC,EAAsBrC,EAAtBqC,SAAanC,EAAvC,YAAgDF,EAAhD,GAEMG,EAAUP,IAEhB,EAAgC+F,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAUA,OACE,kBAAC1C,EAAA,EAAD,iBAAUjD,EAAV,CAAgBD,UAAWG,YAAKD,EAAQL,KAAMG,KAC5C,kBAAC6F,EAAA,EAAD,CAAYC,MAAM,mCAClB,kBAACC,EAAA,EAAD,MACA,kBAAC3C,EAAA,EAAD,CAAapD,UAAWE,EAAQgF,SAC9B,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,UAAQ,GAChB,kBAACC,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,KAAYjE,EAAMyB,cAEpB,kBAACsC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,KAAYjE,EAAM8B,QAEpB,kBAACiC,EAAA,EAAD,CAAUC,UAAQ,GAChB,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KAAYjE,EAAM+B,QAGpB,kBAACgC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,0BACA,kBAACA,EAAA,EAAD,KAAY7G,IAAO,UAAC4C,EAAMkC,oBAAP,aAAC,EAAoBnF,WAKhD,kBAACyF,EAAA,EAAD,CAAa3E,UAAWE,EAAQqB,SAC9B,kBAACqD,EAAA,EAAD,CAAQC,QApCS,WACrBe,GAAY,KAoCN,kBAAC,IAAD,CAAU5F,UAAWE,EAAQqF,aAD/B,wBAKF,kBAAC,EAAD,CACErD,QAtCkB,WACtB0D,GAAY,IAsCR3D,KAAM0D,EACNvD,SAAUA,EACVD,MAAOA,M,wBC3ETxC,EAAYC,aAAW,SAAAY,GAAK,MAAK,CACrCX,KAAM,GACNqF,QAAS,CACPC,QAAS,GAEX5D,QAAS,CACP6D,cAAe,SACfC,WAAY,aACZ,YAAa,CACXC,WAAY,IAGhBC,WAAY,CACVC,YAAahF,EAAMc,QAAQ,QAqChB+E,EAjCE,SAAAtG,GACf,IAAQC,EAA8BD,EAA9BC,UAAWmC,EAAmBpC,EAAnBoC,MAAUlC,EAA7B,YAAsCF,EAAtC,GAEMG,EAAUP,IAEhB,OACE,kBAACuD,EAAA,EAAD,iBAAUjD,EAAV,CAAgBD,UAAWG,YAAKD,EAAQL,KAAMG,KAC5C,kBAAC6F,EAAA,EAAD,CAAYC,MAAM,iCAClB,kBAACC,EAAA,EAAD,MACA,kBAAC3C,EAAA,EAAD,CAAapD,UAAWE,EAAQgF,SAC9B,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,kCACA,kBAACA,EAAA,EAAD,KAAYjE,EAAMiC,sBAGpB,kBAAC8B,EAAA,EAAD,CAAUC,UAAQ,GAChB,kBAACC,EAAA,EAAD,wBACA,kBAACA,EAAA,EAAD,KAAYjE,EAAMgC,iB,2BChCdvE,aAAW,SAAAY,GAAK,MAAK,CACrCX,KAAM,GACNqF,QAAS,GACToB,WAAY,CACVjF,UAAWb,EAAMc,QAAQ,IAE3BiF,SAAU,CACRf,YAAahF,EAAMc,QAAQ,IAE7BkF,MAAO,CACLnF,UAAWb,EAAMc,QAAQ,IAE3BmF,KAAM,CACJtB,QAAS3E,EAAMc,QAAQ,Q,qFCjBrB3B,GAAYC,aAAW,SAAAY,GAAK,MAAK,CACrCX,KAAM,GACN6G,YAAa,CACXC,QAAS,OACTvB,cAAe,SACfC,WAAY,cAEduB,OAAQ,CACNvF,UAAWb,EAAMc,QAAQ,IAE3BuF,aAAc,CACZxF,UAAWb,EAAMc,QAAQ,GACzBI,MAAOlB,EAAMmB,QAAQC,MACrBC,gBAAiBrB,EAAMmB,QAAQmF,MAAMC,KACrC,UAAW,CACTlF,gBAAiBrB,EAAMmB,QAAQmF,MAAME,OAGzCC,aAAc,CACZ5F,UAAWb,EAAMc,QAAQ,GACzBI,MAAOlB,EAAMmB,QAAQC,MACrBC,gBAAiBrB,EAAMmB,QAAQuF,QAAQH,KACvC,UAAW,CACTlF,gBAAiBrB,EAAMmB,QAAQuF,QAAQF,OAG3CzB,WAAY,CACVC,YAAahF,EAAMc,QAAQ,QAsEhB6F,GAnEM,SAAApH,GACnB,IAAQC,EAAwCD,EAAxCC,UAAWmC,EAA6BpC,EAA7BoC,MAAOC,EAAsBrC,EAAtBqC,SAAanC,EAAvC,YAAgDF,EAAhD,IAEMG,EAAUP,KAChB,EAA8B+F,oBAAS,GAAvC,mBAAO0B,EAAP,KAAgBC,EAAhB,KA8BA,OACE,kBAACnE,EAAA,EAAD,iBAAUjD,EAAV,CAAgBD,UAAWG,YAAKD,EAAQL,KAAMG,KAC5C,kBAAC6F,EAAA,EAAD,CAAYC,MAAM,mCAClB,kBAACC,EAAA,EAAD,MACA,kBAAC3C,EAAA,EAAD,MACQ,OAALjB,QAAK,IAALA,OAAA,EAAAA,EAAO2C,UACN,kBAACF,EAAA,EAAD,CACE5E,UAAWE,EAAQ+G,aACnBnC,SAAUsC,EACVvC,QAvBU,WAAO,IAAD,EACxBwC,GAAW,GACXvI,IAAa2D,WAAWN,EAAM9C,QAA9B,2BACK8C,GADL,IAEE2C,UAAU,EACVwC,UAAWnF,EAAMyB,YACjB1E,KAAI,UAAEiD,EAAMkC,oBAAR,aAAE,EAAoBnF,QAEzByD,MAAK,SAAAC,GACJR,EAASQ,EAAIzD,KAAKgD,UAEnBoF,SAAQ,kBAAMF,GAAW,QAapB,kBAAC,KAAD,CAAqBrH,UAAWE,EAAQqF,aAJ1C,mBAQA,kBAACX,EAAA,EAAD,CACE5E,UAAWE,EAAQ2G,aACnB/B,SAAUsC,EACVvC,QA7CW,WAAO,IAAD,EACzBwC,GAAW,GACXvI,IAAa2D,WAAWN,EAAM9C,QAA9B,2BACK8C,GADL,IAEE2C,UAAU,EACVwC,UAAWnF,EAAMyB,YACjB1E,KAAI,UAAEiD,EAAMkC,oBAAR,aAAE,EAAoBnF,QAEzByD,MAAK,SAAAC,GACJR,EAASQ,EAAIzD,KAAKgD,UAEnBoF,SAAQ,kBAAMF,GAAW,QAmCpB,kBAAC,KAAD,CAAmBrH,UAAWE,EAAQqF,aAJxC,6B,4BCpFJ5F,GAAYC,aAAW,iBAAO,CAClCC,KAAM,OA4CO2H,GAzCE,SAAAzH,GACf,IAAQC,EAAiCD,EAAjCC,UAAWjB,EAAsBgB,EAAtBhB,SAAakB,EAAhC,YAAyCF,EAAzC,IAEMG,EAAUP,KAChB,EAA0B+F,mBAAS,MAAnC,mBAAOvD,EAAP,KAAcC,EAAd,KAMA,OAJAqF,qBAAU,WACR3I,IAAa4I,QAAQ3I,GAAU4D,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAIzD,KAAKgD,YAC5D,IAEEA,EAKH,kBAACmB,EAAA,EAAD,iBACMrD,EADN,CAEED,UAAWG,YAAKD,EAAQL,KAAMG,GAC9BoB,WAAS,EACTE,QAAS,IACT,kBAACgC,EAAA,EAAD,CAAMC,MAAI,EAACoE,GAAI,EAAGnE,GAAI,EAAGoE,GAAI,EAAGnE,GAAI,IAClC,kBAACoE,EAAD,CAAczF,SAAUA,EAAUD,MAAOA,KAE3C,kBAACmB,EAAA,EAAD,CAAMC,MAAI,EAACoE,GAAI,EAAGnE,GAAI,EAAGoE,GAAI,EAAGnE,GAAI,IAClC,kBAAC,EAAD,CAAUtB,MAAOA,KAKnB,kBAACmB,EAAA,EAAD,CAAMC,MAAI,EAACoE,GAAI,EAAGnE,GAAI,EAAGoE,GAAI,EAAGnE,GAAI,IAClC,kBAAC,GAAD,CAAcrB,SAAUA,EAAUD,MAAOA,MAnBtC,M,iECALxC,GAAYC,aAAW,iBAAO,CAClCC,KAAM,GACNqF,QAAS,CACPC,QAAS,GAEX2C,MAAO,CACLC,SAAU,UA4GC1B,GAxGE,SAAAtG,GACf,IAAQC,EAAuBD,EAAvBC,UAAcC,EAAtB,YAA+BF,EAA/B,IAEMG,EAAUP,KAChB,EAAgC+F,mBAAS,IAAzC,mBAAOsC,EAAP,KAAiBC,EAAjB,KAEAR,qBAAU,WACR,IAAIS,GAAU,EAYd,OATElJ,KAAMC,IAAI,wCAAwC0D,MAAK,SAAAwF,GACjDD,GACFD,EAAYE,EAAShJ,KAAK6I,aAOzB,WACLE,GAAU,KAEX,IAEH,IAAME,EAAe,CACnBC,QAASvG,IAAOwG,OAAO,KACvBC,KAAMzG,IAAOC,MAAM,KACnByG,SAAU1G,IAAO2G,IAAI,MAGvB,OACE,yCACMxI,EADN,CAEED,UAAWG,YAAKD,EAAQL,KAAMG,KAE9B,kBAACkD,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CACE6C,OAAQ,kBAAC,IAAD,MACR5C,MAAM,sBAER,kBAACC,EAAA,EAAD,MACA,kBAAC3C,EAAA,EAAD,CAAapD,UAAWE,EAAQgF,SAC9B,kBAAC,KAAD,KACE,yBAAKlF,UAAWE,EAAQ4H,OACtB,kBAAC9B,EAAA,EAAD,KACE,kBAAC2C,GAAA,EAAD,KACE,kBAACzC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,WACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAW/C,MAAM,SAAjB,aAGJ,kBAAC4C,EAAA,EAAD,KACG+B,EAASxD,KAAI,SAAAoE,GAAO,OACnB,kBAAC1C,EAAA,EAAD,CAAUzB,IAAKmE,EAAQC,IACrB,kBAACzC,EAAA,EAAD,SAAawC,EAAQC,GAAGC,MAAM,KAAKC,SACnC,kBAAC3C,EAAA,EAAD,KACG4C,IAAOJ,EAAQK,MAAMC,OAAO,uBAE/B,kBAAC9C,EAAA,EAAD,KAAYwC,EAAQO,aACpB,kBAAC/C,EAAA,EAAD,KAAYwC,EAAQQ,eACpB,kBAAChD,EAAA,EAAD,KACGwC,EAAQS,SACRT,EAAQpK,OAEX,kBAAC4H,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1E,MAAO0G,EAAaQ,EAAQU,QAC5B/I,QAAQ,YAEPqI,EAAQU,SAGb,kBAAClD,EAAA,EAAD,CAAW/C,MAAM,SACf,kBAACuB,EAAA,EAAD,CACElD,MAAM,UACNrB,UAAWkJ,KACXC,KAAK,QACLC,GAAI,yBACJlJ,QAAQ,YALV,qB,iBC1FlBZ,GAAYC,aAAW,iBAAO,CAClCC,KAAM,GACNqF,QAAS,CACPC,QAAS,GAEX2C,MAAO,CACLC,SAAU,MAEZ2B,WAAY,CACV1I,MAAO,KAET2I,WAAY,CACV3I,MAAO,QAgFI4I,GA5EF,SAAA7J,GACX,IAAQC,EAAuBD,EAAvBC,UAAcC,EAAtB,YAA+BF,EAA/B,IAEMG,EAAUP,KAEhB,EAAwB+F,mBAAS,IAAjC,mBAAOmE,EAAP,KAAaC,EAAb,KAoBA,OAlBArC,qBAAU,WACR,IAAIS,GAAU,EAYd,OATElJ,KAAMC,IAAI,oCAAoC0D,MAAK,SAAAwF,GAC7CD,GACF4B,EAAQ3B,EAAShJ,KAAK0K,SAOrB,WACL3B,GAAU,KAEX,IAGD,yCACMjI,EADN,CAEED,UAAWG,YAAKD,EAAQL,KAAMG,KAE9B,kBAACkD,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CAAYC,MAAM,kBAClB,kBAACC,EAAA,EAAD,MACA,kBAAC3C,EAAA,EAAD,CAAapD,UAAWE,EAAQgF,SAC9B,kBAAC,KAAD,CAAkB6E,QAAS,CAAEC,iBAAiB,IAC5C,yBAAKhK,UAAWE,EAAQ4H,OACtB,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG4D,EAAKrF,KAAI,SAAAzB,GAAG,OACX,kBAACmD,EAAA,EAAD,CAAUzB,IAAK1B,EAAI8F,IACjB,kBAACzC,EAAA,EAAD,CAAWpG,UAAWE,EAAQwJ,YAC5B,kBAACtJ,EAAA,EAAD,CAAYG,QAAQ,MAAMwC,EAAIkH,SAEhC,kBAAC7D,EAAA,EAAD,CAAWpG,UAAWE,EAAQyJ,YAC5B,kBAAC,IAAD,CACEjI,MACiB,MAAfqB,EAAIuG,OACAxH,IAAOC,MAAM,KACbD,IAAO2G,IAAI,MAGhB1F,EAAIuG,SAGT,kBAAClD,EAAA,EAAD,KAAYrD,EAAImH,OAChB,kBAAC9D,EAAA,EAAD,KAAYrD,EAAIoH,MAChB,kBAAC/D,EAAA,EAAD,CAAW/C,MAAM,SAASN,EAAIqH,IAC9B,kBAAChE,EAAA,EAAD,CAAW/C,MAAM,SACd2F,IAAOjG,EAAIsH,YAAYnB,OAAO,sCCvFjDvJ,GAAYC,aAAW,SAAAY,GAAK,MAAK,CACrCX,KAAM,CACJsF,QAAS3E,EAAMc,QAAQ,IAEzBgJ,KAAM,CACJjJ,UAAWb,EAAMc,QAAQ,IAE3BiJ,QAAS,CACP1I,gBAAiBC,IAAO0I,KAAK,MAE/BtF,QAAS,CACP7D,UAAWb,EAAMc,QAAQ,QAsDdmJ,GAlDW,SAAA1K,GACxB,IAAQ2K,EAAmB3K,EAAnB2K,MAAOC,EAAY5K,EAAZ4K,QACTzK,EAAUP,KAChB,EAAoB+K,EAAME,OAAlB/B,EAAR,EAAQA,GAAIgC,EAAZ,EAAYA,IAMNP,EAAO,CACX,CAAE9L,MAAO,WAAYsF,MAAO,iBAI9B,OAAK+G,EAIAP,EAAKQ,MAAK,SAAAC,GAAC,OAAIA,EAAEvM,QAAUqM,KAK9B,kBAAC,IAAD,CAAM7K,UAAWE,EAAQL,KAAMiG,MAAM,gCACnC,kBAAC,EAAD,MACA,kBAACkF,EAAA,EAAD,CACEhL,UAAWE,EAAQoK,KACnBW,SAtBmB,SAACC,EAAO1M,GAC/BmM,EAAQQ,KAAK3M,IAsBT4M,cAAc,OACd5M,MAAOqM,EACPtK,QAAQ,cACP+J,EAAK9F,KAAI,SAAAqG,GAAG,OACX,kBAACQ,EAAA,EAAD,CAAK5G,IAAKoG,EAAIrM,MAAOsF,MAAO+G,EAAI/G,MAAOtF,MAAOqM,EAAIrM,YAGtD,kBAACuH,EAAA,EAAD,CAAS/F,UAAWE,EAAQqK,UAC5B,yBAAKvK,UAAWE,EAAQgF,SACb,aAAR2F,GAAsB,kBAAC,GAAD,CAAU9L,SAAU8J,IAClC,aAARgC,GAAsB,kBAAC,GAAD,MACd,SAARA,GAAkB,kBAAC,GAAD,QApBhB,kBAAC,IAAD,CAAUpB,GAAG,sBAJb,kBAAC,IAAD,CAAUA,GAAE,wBAAmBZ,EAAnB","file":"static/js/4.fd4df54e.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\n\nexports.default = _default;","import axios from './axios';\n\nclass StaffService {\n  static _getOne(staff_id) {\n    return axios.get('staffs/' + staff_id);\n  }\n  static _getAll() {\n    return axios.get('/staffs');\n  }\n\n  static _getAllByRole(role) {\n    return axios.get('/staffs?role=' + role);\n  }\n  static _createOne(data) {\n    return axios.post('/staffs', data);\n  }\n  static _updateOne(user_id, data) {\n    return axios.put('/staffs/' + user_id, data);\n  }\n}\n\nexport default StaffService;\n","const roleMap = {\n  accountant: 'Kế toán',\n  admin: 'Admin',\n  instructor: 'Giảng viên',\n  'edu-manager': 'Quản lý đào tạo',\n  'edu-qv': 'Kiểm định chất lượng đào tạo'\n};\n\nexport default roleMap;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-5h-1V6c0-2.76-2.24-5-5-5-2.28 0-4.27 1.54-4.84 3.75-.14.54.18 1.08.72 1.22.53.14 1.08-.18 1.22-.72C9.44 3.93 10.63 3 12 3c1.65 0 3 1.35 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 11c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-8c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v8z\"\n}), 'LockOpenRounded');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Typography component=\"h2\" gutterBottom variant=\"overline\">\n        Nhân viên\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardContent,\n  CardActions,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  colors,\n  MenuItem\n} from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport roleMap from 'constants/roleMap';\nimport StaffService from 'services/staff.service';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst CustomerEdit = props => {\n  const { open, onClose, staff, setStaff, className, ...rest } = props;\n\n  const classes = useStyles();\n  const form = useForm();\n\n  const onSubmit = async data => {\n    return StaffService._updateOne(staff.uid, data)\n      .then(res => {\n        alert('Cập nhật thành công');\n        setStaff(res.data.staff);\n        console.log(res.data.staff);\n      })\n      .catch(() => alert('Cập nhật lỗi'));\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <CardContent>\n            <Typography align=\"center\" gutterBottom variant=\"h3\">\n              Chỉnh sửa thông tin nhân viên\n            </Typography>\n            <Grid className={classes.container} container spacing={3}>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  defaultValue={staff.displayName}\n                  fullWidth\n                  label=\"Họ tên\"\n                  {...form.register('full_name')}\n                  required\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  defaultValue={staff.email}\n                  fullWidth\n                  label=\"Email\"\n                  {...form.register('email')}\n                  required\n                  variant=\"outlined\"\n                />\n              </Grid>\n\n              <Grid item md={6} xs={12}>\n                <TextField\n                  defaultValue={staff.phone}\n                  fullWidth\n                  label=\"SDT\"\n                  {...form.register('phone')}\n                  required\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  defaultValue={staff.bank_name}\n                  fullWidth\n                  label=\"Tên ngân hàng\"\n                  {...form.register('bank_name')}\n                  required\n                  variant=\"outlined\"\n                />\n              </Grid>\n\n              <Grid item md={6} xs={12}>\n                <TextField\n                  defaultValue={staff.bank_account_number}\n                  fullWidth\n                  label=\"Số tài khoản ngân hàng\"\n                  {...form.register('bank_account_number')}\n                  required\n                  variant=\"outlined\"\n                />\n              </Grid>\n\n              <Grid item md={6} xs={12}>\n                <TextField\n                  defaultValue={staff.customClaims?.role}\n                  fullWidth\n                  label=\"Chức vụ\"\n                  select\n                  {...form.register('role')}\n                  required\n                  variant=\"outlined\">\n                  {Object.keys(roleMap).map(key => (\n                    <MenuItem key={key} value={key}>\n                      {roleMap[key]}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <Button onClick={onClose} variant=\"contained\">\n              Close\n            </Button>\n            <Button\n              className={classes.saveButton}\n              disabled={form.formState.isSubmitting}\n              onClick={form.handleSubmit(onSubmit)}\n              variant=\"contained\">\n              Save\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n};\n\nCustomerEdit.displayName = 'CustomerEdit';\n\nCustomerEdit.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  setStaff: PropTypes.func,\n  staff: PropTypes.any\n};\n\nCustomerEdit.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CustomerEdit;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { CustomerEdit } from './components';\nimport roleMap from 'constants/roleMap';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst StaffInfo = props => {\n  const { staff, className, setStaff, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Thông tin nhân viên  \" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow selected>\n              <TableCell>Họ tên</TableCell>\n              <TableCell>{staff.displayName}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>{staff.email}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>SDT</TableCell>\n              <TableCell>{staff.phone}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Chức vụ</TableCell>\n              <TableCell>{roleMap[staff.customClaims?.role]}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Chỉnh sửa\n        </Button>\n      </CardActions>\n      <CustomerEdit\n        onClose={handleEditClose}\n        open={openEdit}\n        setStaff={setStaff}\n        staff={staff}\n      />\n    </Card>\n  );\n};\n\nStaffInfo.propTypes = {\n  className: PropTypes.string,\n  setStaff: PropTypes.func,\n  staff: PropTypes.object.isRequired\n};\n\nexport default StaffInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Invoices = props => {\n  const { className, staff, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Thông tin ngân hàng\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Số tài khoản</TableCell>\n              <TableCell>{staff.bank_account_number}</TableCell>\n            </TableRow>\n\n            <TableRow selected>\n              <TableCell>Ngân hàng</TableCell>\n              <TableCell>{staff.bank_name}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string,\n  staff: PropTypes.object.isRequired\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {},\n  sendButton: {\n    marginTop: theme.spacing(2)\n  },\n  mailIcon: {\n    marginRight: theme.spacing(1)\n  },\n  table: {\n    marginTop: theme.spacing(2)\n  },\n  cell: {\n    padding: theme.spacing(1)\n  }\n}));\nconst SendEmails = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\n    'Resend last invoice',\n    'Send password reset',\n    'Send verification'\n  ];\n\n  const [option, setOption] = useState(options[0]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Send emails\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={handleChange}\n          select\n          // eslint-disable-next-line react/jsx-sort-props\n          SelectProps={{ native: true }}\n          value={option}\n          variant=\"outlined\"\n        >\n          {options.map(option => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Button\n          className={classes.sendButton}\n          variant=\"contained\"\n        >\n          <MaiIcon className={classes.mailIcon} />\n          Send email\n        </Button>\n        <Table className={classes.table}>\n          <TableBody>\n            {customer.emails.map(email => (\n              <TableRow key={email.id}>\n                <TableCell className={classes.cell}>\n                  {moment(email.created_at).format('DD/MM/YYYY | HH:MM')}\n                </TableCell>\n                <TableCell className={classes.cell}>\n                  {email.description}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nSendEmails.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default SendEmails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider\n} from '@material-ui/core';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport StaffService from 'services/staff.service';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  mainActions: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  notice: {\n    marginTop: theme.spacing(1)\n  },\n  deleteButton: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.white,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  enableButton: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.white,\n    backgroundColor: theme.palette.success.main,\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\nconst OtherActions = props => {\n  const { className, staff, setStaff, ...rest } = props;\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n\n  const disableStaff = () => {\n    setLoading(true);\n    StaffService._updateOne(staff.user_id, {\n      ...staff,\n      disabled: true,\n      full_name: staff.displayName,\n      role: staff.customClaims?.role\n    })\n      .then(res => {\n        setStaff(res.data.staff);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const enableStaff = () => {\n    setLoading(true);\n    StaffService._updateOne(staff.user_id, {\n      ...staff,\n      disabled: false,\n      full_name: staff.displayName,\n      role: staff.customClaims?.role\n    })\n      .then(res => {\n        setStaff(res.data.staff);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Hành động khác\" />\n      <Divider />\n      <CardContent>\n        {staff?.disabled ? (\n          <Button\n            className={classes.enableButton}\n            disabled={loading}\n            onClick={enableStaff}>\n            <LockOpenRoundedIcon className={classes.buttonIcon} />\n            Mở khóa\n          </Button>\n        ) : (\n          <Button\n            className={classes.deleteButton}\n            disabled={loading}\n            onClick={disableStaff}>\n            <NotInterestedIcon className={classes.buttonIcon} />\n            Vô hiệu hóa\n          </Button>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nOtherActions.propTypes = {\n  className: PropTypes.string,\n  setStaff: PropTypes.func,\n  staff: PropTypes.object\n};\n\nexport default OtherActions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { CustomerInfo, Invoices, OtherActions } from './components';\nimport StaffService from 'services/staff.service';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Overview = props => {\n  const { className, staff_id, ...rest } = props;\n\n  const classes = useStyles();\n  const [staff, setStaff] = useState(null);\n\n  useEffect(() => {\n    StaffService._getOne(staff_id).then(res => setStaff(res.data.staff));\n  }, []);\n\n  if (!staff) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <CustomerInfo setStaff={setStaff} staff={staff} />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <Invoices staff={staff} />\n      </Grid>\n      {/* <Grid item lg={4} md={6} xl={3} xs={12}>\n        <SendEmails customer={customer} />\n      </Grid> */}\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <OtherActions setStaff={setStaff} staff={staff} />\n      </Grid>\n    </Grid>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string,\n  staff_id: PropTypes.string\n};\n\nexport default Overview;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Label, GenericMoreButton } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      axios.get('/api/management/customers/1/invoices').then(response => {\n        if (mounted) {\n          setInvoices(response.data.invoices);\n        }\n      });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Label } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  methodCell: {\n    width: 100\n  },\n  statusCell: {\n    width: 64\n  }\n}));\n\nconst Logs = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchLogs = () => {\n      axios.get('/api/management/customers/1/logs').then(response => {\n        if (mounted) {\n          setLogs(response.data.logs);\n        }\n      });\n    };\n\n    fetchLogs();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader title=\"Customer logs\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar options={{ suppressScrollY: true }}>\n            <div className={classes.inner}>\n              <Table>\n                <TableBody>\n                  {logs.map(log => (\n                    <TableRow key={log.id}>\n                      <TableCell className={classes.methodCell}>\n                        <Typography variant=\"h6\">{log.method}</Typography>\n                      </TableCell>\n                      <TableCell className={classes.statusCell}>\n                        <Label\n                          color={\n                            log.status === 200\n                              ? colors.green[600]\n                              : colors.red[600]\n                          }\n                        >\n                          {log.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell>{log.route}</TableCell>\n                      <TableCell>{log.desc}</TableCell>\n                      <TableCell align=\"right\">{log.IP}</TableCell>\n                      <TableCell align=\"right\">\n                        {moment(log.created_at).format('YYYY/MM/DD | hh:mm:ss')}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nLogs.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Logs;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport { Header, Overview, Invoices, Logs } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst AdminStaffDetails = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'overview', label: 'Thông tin' },\n    \n  ];\n\n  if (!tab) {\n    return <Redirect to={`/admin/staffs/${id}/overview`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Thông tin nhân viên\">\n      <Header />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\">\n        {tabs.map(tab => (\n          <Tab key={tab.value} label={tab.label} value={tab.value} />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'overview' && <Overview staff_id={id} />}\n        {tab === 'invoices' && <Invoices />}\n        {tab === 'logs' && <Logs />}\n      </div>\n    </Page>\n  );\n};\n\nAdminStaffDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default AdminStaffDetails;\n"],"sourceRoot":""}