{"version":3,"sources":["../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/MailOutline.js","../node_modules/@material-ui/icons/NotInterested.js","../node_modules/@material-ui/icons/PersonOutline.js","views/CustomerManagementDetails/components/Header/Header.js","views/CustomerManagementDetails/components/Summary/components/CustomerInfo/components/CustomerEdit/CustomerEdit.js","views/CustomerManagementDetails/components/Summary/components/CustomerInfo/CustomerInfo.js","views/CustomerManagementDetails/components/Summary/components/Invoices/Invoices.js","views/CustomerManagementDetails/components/Summary/components/SendEmails/SendEmails.js","views/CustomerManagementDetails/components/Summary/components/OtherActions/OtherActions.js","views/CustomerManagementDetails/components/Summary/Summary.js","views/CustomerManagementDetails/components/Invoices/Invoices.js","views/CustomerManagementDetails/components/Logs/Logs.js","views/CustomerManagementDetails/CustomerManagementDetails.js"],"names":["Switch","React","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","_objectWithoutProperties","icon","thumb","clsx","root","edgeStart","edgeEnd","concat","capitalize","SwitchBase","_extends","type","checkedIcon","switchBase","input","checked","disabled","track","withStyles","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d","useStyles","makeStyles","Header","rest","Typography","component","gutterBottom","variant","outline","maxHeight","overflowY","maxWidth","container","marginTop","spacing","actions","justifyContent","saveButton","colors","green","CustomerEdit","open","onClose","customer","useState","formState","setFormState","handleFieldChange","event","persist","target","Modal","Card","CardContent","align","Grid","item","md","xs","TextField","fullWidth","label","onChange","email","phone","state","country","address1","address2","verified","discountedPrices","CardActions","Button","onClick","displayName","defaultProps","content","flexDirection","alignItems","buttonIcon","CustomerInfo","openEdit","setOpenEdit","CardHeader","title","Divider","Table","TableBody","TableRow","TableCell","orange","selected","getSum","invoices","filtered","filter","invoice","total","reduce","toFixed","Invoices","paidInvoices","paidTotal","draftInvoices","draftTotal","dueInvoices","dueTotal","refundedInvoices","refundedTotal","incomeInvoices","incomeTotal","iban","autoCC","red","length","currency","sendButton","mailIcon","table","cell","SendEmails","options","option","setOption","select","SelectProps","native","map","key","emails","id","moment","created_at","format","description","mainActions","notice","deleteButton","error","dark","OtherActions","Summary","setCustomer","useEffect","mounted","axios","get","then","response","data","summary","lg","xl","inner","minWidth","setInvoices","statusColors","pending","paid","rejected","TableHead","split","shift","date","paymentMethod","status","RouterLink","to","methodCell","statusCell","Logs","logs","setLogs","suppressScrollY","log","method","route","desc","IP","tabs","divider","CustomerManagementDetails","match","history","params","tab","find","t","Tabs","push","scrollButtons","Tab"],"mappings":"2IAAA,yEAmKIA,EAAsBC,cAAiB,SAAgBC,EAAOC,GAChE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAeJ,EAAMK,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAcN,EAAMO,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAcR,EAAMS,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAQC,YAAyBX,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElFY,EAAoBb,gBAAoB,OAAQ,CAClDI,UAAWD,EAAQW,QAErB,OAAoBd,gBAAoB,OAAQ,CAC9CI,UAAWW,YAAKZ,EAAQa,KAAMZ,EAAW,CACvC,MAASD,EAAQc,UACjB,IAAOd,EAAQe,SACfV,GAAgB,UAATE,GAAoBP,EAAQ,OAAOgB,OAAOC,YAAWV,OAChDV,gBAAoBqB,IAAYC,YAAS,CACvDC,KAAM,WACNV,KAAMA,EACNW,YAAaX,EACbV,QAAS,CACPa,KAAMD,YAAKZ,EAAQsB,WAAYtB,EAAQ,QAAQgB,OAAOC,YAAWd,MACjEoB,MAAOvB,EAAQuB,MACfC,QAASxB,EAAQwB,QACjBC,SAAUzB,EAAQyB,UAEpB1B,IAAKA,GACJS,IAAsBX,gBAAoB,OAAQ,CACnDI,UAAWD,EAAQ0B,YAwGRC,iBA/RK,SAAgBC,GAClC,MAAO,CAELf,KAAM,CACJgB,QAAS,cACTC,MAAO,GACPC,OAAQ,GACRC,SAAU,SACVC,QAAS,GACTC,UAAW,aACXC,SAAU,WACVC,WAAY,EACZC,OAAQ,EAERC,cAAe,SAEf,eAAgB,CACdC,YAAa,UAKjBzB,UAAW,CACT0B,YAAa,GAIfzB,QAAS,CACP0B,aAAc,GAIhBnB,WAAY,CACVa,SAAU,WACVO,IAAK,EACLC,KAAM,EACNN,OAAQ,EAERlC,MAA8B,UAAvByB,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQC,KAAK,IAAMjB,EAAMgB,QAAQC,KAAK,KACpFC,WAAYlB,EAAMmB,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUrB,EAAMmB,YAAYE,SAASC,WAEvC,YAAa,CACXC,UAAW,oBAEb,aAAc,CACZhD,MAA8B,UAAvByB,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQC,KAAK,KAAOjB,EAAMgB,QAAQC,KAAK,MAEvF,qBAAsB,CACpBO,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBxB,EAAMgB,QAAQxB,KAAmB,IAAO,KAKrDiC,aAAc,CACZ,YAAa,CACXlD,MAAOyB,EAAMgB,QAAQU,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAM7B,EAAMgB,QAAQU,QAAQC,KAAM3B,EAAMgB,QAAQc,OAAOC,cACxE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZrD,MAA8B,UAAvByB,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQC,KAAK,KAAOjB,EAAMgB,QAAQC,KAAK,MAEvF,qBAAsB,CACpBW,gBAAiB5B,EAAMgB,QAAQU,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvB5B,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQgB,OAAOC,MAAQjC,EAAMgB,QAAQgB,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACX5D,MAAOyB,EAAMgB,QAAQoB,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAM7B,EAAMgB,QAAQoB,UAAUT,KAAM3B,EAAMgB,QAAQc,OAAOC,cAC1E,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZrD,MAA8B,UAAvByB,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQC,KAAK,KAAOjB,EAAMgB,QAAQC,KAAK,MAEvF,qBAAsB,CACpBW,gBAAiB5B,EAAMgB,QAAQoB,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvB5B,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQgB,OAAOC,MAAQjC,EAAMgB,QAAQgB,OAAOE,QAKxGG,UAAW,CACTnC,MAAO,GACPC,OAAQ,GACRE,QAAS,EACT,WAAY,CACVH,MAAO,GACPC,OAAQ,IAEV,gBAAiB,CACfE,QAAS,EACT,YAAa,CACXkB,UAAW,sBAMjB3B,QAAS,GAGTC,SAAU,GAGVF,MAAO,CACLoB,KAAM,QACNb,MAAO,QAITnB,MAAO,CACLuD,UAAWtC,EAAMuC,QAAQ,GACzBX,gBAAiB,eACjB1B,MAAO,GACPC,OAAQ,GACRqC,aAAc,OAIhB1C,MAAO,CACLK,OAAQ,OACRD,MAAO,OACPsC,aAAc,EACd/B,QAAS,EACTS,WAAYlB,EAAMmB,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUrB,EAAMmB,YAAYE,SAASC,WAEvCM,gBAAwC,UAAvB5B,EAAMgB,QAAQxB,KAAmBQ,EAAMgB,QAAQgB,OAAOC,MAAQjC,EAAMgB,QAAQgB,OAAOE,MACpGV,QAAgC,UAAvBxB,EAAMgB,QAAQxB,KAAmB,IAAO,OA2IrB,CAChCiD,KAAM,aADO1C,CAEZ/B,I,kCC1SH,IAAI0E,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhF,EAAQ2E,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuBhF,EAAMkF,cAAc,OAAQ,CACnFC,EAAG,wJACD,QAEJL,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhF,EAAQ2E,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuBhF,EAAMkF,cAAc,OAAQ,CACnFC,EAAG,+HACD,eAEJL,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhF,EAAQ2E,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuBhF,EAAMkF,cAAc,OAAQ,CACnFC,EAAG,mPACD,iBAEJL,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhF,EAAQ2E,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuBhF,EAAMkF,cAAc,OAAQ,CACnFC,EAAG,2PACD,iBAEJL,EAAQE,QAAUC,G,2MCbZG,EAAYC,aAAW,iBAAO,CAClCrE,KAAM,OAsCOsE,EAnCA,SAAArF,GACb,IAAQG,EAAuBH,EAAvBG,UAAcmF,EAAtB,YAA+BtF,EAA/B,GAEME,EAAUiF,IAMhB,OACE,yCACMG,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAACoF,EAAA,EAAD,CACEC,UAAU,KACVC,cAAY,EACZC,QAAQ,YAHV,aAOA,kBAACH,EAAA,EAAD,CACEC,UAAU,KACVE,QAAQ,MAjBN,uB,yPCCJP,EAAYC,aAAW,SAAAtD,GAAK,MAAK,CACrCf,KAAM,CACJsB,SAAU,WACVO,IAAK,MACLC,KAAM,MACNQ,UAAW,wBACXsC,QAAS,OACTvB,UAAWtC,EAAMuC,QAAQ,IACzBrC,MAAO,IACP4D,UAAW,OACXC,UAAW,OACXC,SAAU,QAEZC,UAAW,CACTC,UAAWlE,EAAMmE,QAAQ,IAE3BC,QAAS,CACPC,eAAgB,YAElBC,WAAY,CACV/F,MAAOyB,EAAMgB,QAAQkB,MACrBN,gBAAiB2C,IAAOC,MAAM,KAC9B,UAAW,CACT5C,gBAAiB2C,IAAOC,MAAM,WAK9BC,EAAe,SAAAvG,GACnB,IAAQwG,EAAgDxG,EAAhDwG,KAAMC,EAA0CzG,EAA1CyG,QAASC,EAAiC1G,EAAjC0G,SAAUvG,EAAuBH,EAAvBG,UAAcmF,EAA/C,YAAwDtF,EAAxD,GAEME,EAAUiF,IAEhB,EAAkCwB,mBAAS,eACtCD,IADL,mBAAOE,EAAP,KAAkBC,EAAlB,KAIA,IAAKL,EACH,OAAO,KAGT,IAAMM,EAAoB,SAAAC,GACxBA,EAAMC,UACNH,GAAa,SAAAD,GAAS,kCACjBA,GADiB,kBAEnBG,EAAME,OAAO1C,KACU,aAAtBwC,EAAME,OAAO3F,KACTyF,EAAME,OAAOvF,QACbqF,EAAME,OAAOnC,YAIvB,OACE,kBAACoC,EAAA,EAAD,CACET,QAASA,EACTD,KAAMA,GAEN,kBAACW,EAAA,EAAD,iBACM7B,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,8BACE,kBAACiH,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,CACE8B,MAAM,SACN5B,cAAY,EACZC,QAAQ,MAHV,iBAOA,kBAAC4B,EAAA,EAAD,CACEnH,UAAWD,EAAQ6F,UACnBA,WAAS,EACTE,QAAS,GAET,kBAACqB,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,gBACNrD,KAAK,QACLsD,SAAUf,EACVhC,MAAO8B,EAAUkB,MACjBpC,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,YACNrD,KAAK,OACLsD,SAAUf,EACVhC,MAAO8B,EAAUrC,KACjBmB,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,eACNrD,KAAK,QACLsD,SAAUf,EACVhC,MAAO8B,EAAUmB,MACjBrC,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,eACNrD,KAAK,QACLsD,SAAUf,EACVhC,MAAO8B,EAAUoB,MACjBtC,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNrD,KAAK,UACLsD,SAAUf,EACVhC,MAAO8B,EAAUqB,QACjBvC,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,YACNrD,KAAK,WACLsD,SAAUf,EACVhC,MAAO8B,EAAUsB,SACjBxC,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,YACNrD,KAAK,WACLsD,SAAUf,EACVhC,MAAO8B,EAAUuB,SACjBzC,QAAQ,cAGZ,kBAAC4B,EAAA,EAAD,CAAMC,MAAI,IACV,kBAACD,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAClC,EAAA,EAAD,CAAYG,QAAQ,MAApB,kBACA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,wEAIA,kBAAC5F,EAAA,EAAD,CACE4B,QAASkF,EAAUwB,SACnB/H,MAAM,YACNE,KAAK,QACLgE,KAAK,WACLsD,SAAUf,EACVhC,MAAO8B,EAAUwB,YAGrB,kBAACd,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAClC,EAAA,EAAD,CAAYG,QAAQ,MAApB,qBACA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,6DAGA,kBAAC5F,EAAA,EAAD,CACE4B,QAASkF,EAAUyB,iBACnBhI,MAAM,YACNE,KAAK,QACLgE,KAAK,mBACLsD,SAAUf,EACVhC,MAAO8B,EAAUyB,sBAKzB,kBAACC,EAAA,EAAD,CAAanI,UAAWD,EAAQgG,SAC9B,kBAACqC,EAAA,EAAD,CACEC,QAAS/B,EACTf,QAAQ,aAFV,SAMA,kBAAC6C,EAAA,EAAD,CACEpI,UAAWD,EAAQkG,WACnBoC,QAAS/B,EACTf,QAAQ,aAHV,aAcZa,EAAakC,YAAc,eAS3BlC,EAAamC,aAAe,CAC1BlC,MAAM,EACNC,QAAS,cAGIF,Q,2BCjPTpB,EAAYC,aAAW,SAAAtD,GAAK,MAAK,CACrCf,KAAM,GACN4H,QAAS,CACPxG,QAAS,GAEX+D,QAAS,CACP0C,cAAe,SACfC,WAAY,aACZ,YAAa,CACXnG,WAAY,IAGhBoG,WAAY,CACVnG,YAAab,EAAMmE,QAAQ,QAiGhB8C,EA7FM,SAAA/I,GACnB,IAAQ0G,EAAiC1G,EAAjC0G,SAAUvG,EAAuBH,EAAvBG,UAAcmF,EAAhC,YAAyCtF,EAAzC,GAEME,EAAUiF,IAEhB,EAAgCwB,oBAAS,GAAzC,mBAAOqC,EAAP,KAAiBC,EAAjB,KAUA,OACE,kBAAC9B,EAAA,EAAD,iBACM7B,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAAC+I,EAAA,EAAD,CAAYC,MAAM,kBAClB,kBAACC,EAAA,EAAD,MACA,kBAAChC,EAAA,EAAD,CAAajH,UAAWD,EAAQyI,SAC9B,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,KACG9C,EAASoB,MACV,6BACE,kBAAC,IAAD,CACEzH,MACEqG,EAAS0B,SAAW/B,IAAOC,MAAM,KAAOD,IAAOoD,OAAO,MAGvD/C,EAAS0B,SACN,iBACA,yBAKZ,kBAACmB,EAAA,EAAD,CAAUG,UAAQ,GAChB,kBAACF,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,KAAY9C,EAASqB,QAEvB,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,KAAY9C,EAASsB,QAEvB,kBAACuB,EAAA,EAAD,CAAUG,UAAQ,GAChB,kBAACF,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,KAAY9C,EAASuB,UAEvB,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,KAAY9C,EAASwB,WAEvB,kBAACqB,EAAA,EAAD,CAAUG,UAAQ,GAChB,kBAACF,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,KAAY9C,EAASyB,cAK7B,kBAACG,EAAA,EAAD,CAAanI,UAAWD,EAAQgG,SAC9B,kBAACqC,EAAA,EAAD,CAAQC,QA3DS,WACrBS,GAAY,KA2DN,kBAAC,IAAD,CAAU9I,UAAWD,EAAQ4I,aAD/B,QAIA,kBAACP,EAAA,EAAD,KACE,kBAAC,IAAD,CAAcpI,UAAWD,EAAQ4I,aADnC,yBAIA,kBAACP,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYpI,UAAWD,EAAQ4I,aADjC,sBAKF,kBAAC,EAAD,CACEpC,SAAUA,EACVD,QAtEkB,WACtBwC,GAAY,IAsERzC,KAAMwC,M,+DCpGR7D,EAAYC,aAAW,SAAAtD,GAAK,MAAK,CACrCf,KAAM,GACN4H,QAAS,CACPxG,QAAS,GAEX+D,QAAS,CACP0C,cAAe,SACfC,WAAY,aACZ,YAAa,CACXnG,WAAY,IAGhBoG,WAAY,CACVnG,YAAab,EAAMmE,QAAQ,QAIzB0D,GAAS,SAACC,EAAUtI,GACxB,IAAMuI,EAAWD,EAASE,QAAO,SAAAC,GAAO,OAAIA,EAAQzI,OAASA,KACvD0I,EAAQH,EACXI,QAAO,SAACD,EAAOD,GAAR,OAAoBC,EAAQD,EAAQjF,QAAO,GAClDoF,QAAQ,GAEX,MAAO,CAACL,EAAUG,IAyGLG,GAtGE,SAAAnK,GACf,IAAQ0G,EAAiC1G,EAAjC0G,SAAUvG,EAAuBH,EAAvBG,UAAcmF,EAAhC,YAAyCtF,EAAzC,GAEME,EAAUiF,IAIhB,EAAkCwE,GAAOjD,EAASkD,SAAU,QAA5D,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAoCV,GAAOjD,EAASkD,SAAU,SAA9D,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAgCZ,GAAOjD,EAASkD,SAAU,OAA1D,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAA0Cd,GACxCjD,EAASkD,SACT,YAFF,mBAAOc,EAAP,KAAyBC,EAAzB,KAIA,EAAsChB,GAAOjD,EAASkD,SAAU,UAAhE,mBAAOgB,EAAP,KAAuBC,EAAvB,KAEA,OACE,kBAAC1D,EAAA,EAAD,iBACM7B,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAAC+I,EAAA,EAAD,CAAYC,MAAM,qBAClB,kBAACC,EAAA,EAAD,MACA,kBAAChC,EAAA,EAAD,CAAajH,UAAWD,EAAQyI,SAC9B,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,KACG9C,EAASoE,KACV,6BACE,kBAAC,IAAD,CACEzK,MACEqG,EAASqE,OAAS1E,IAAOC,MAAM,KAAOD,IAAO2E,IAAI,MAGlDtE,EAASqE,OAAS,MAAQ,SAKnC,kBAACxB,EAAA,EAAD,CAAUG,UAAQ,GAChB,kBAACF,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,KACGY,EAAaa,OADhB,KAC0BvE,EAASwE,SAChCb,EAFH,MAKF,kBAACd,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,KACGc,EAAcW,OADjB,KAC2BvE,EAASwE,SACjCX,EAFH,MAKF,kBAAChB,EAAA,EAAD,CAAUG,UAAQ,GAChB,kBAACF,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,KACGgB,EAAYS,OADf,KACyBvE,EAASwE,SAC/BT,EAFH,MAKF,kBAAClB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,KACGkB,EAAiBO,OADpB,KAC8BvE,EAASwE,SACpCP,EAFH,MAKF,kBAACpB,EAAA,EAAD,CAAUG,UAAQ,GAChB,kBAACF,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,KACGoB,EAAeK,OADlB,KAC4BvE,EAASwE,SAClCL,EAFH,SAQR,kBAACvC,EAAA,EAAD,CAAanI,UAAWD,EAAQgG,SAC9B,kBAACqC,EAAA,EAAD,CAAQC,QA3ES,cA4Ef,kBAAC,IAAD,CAAUrI,UAAWD,EAAQ4I,aAD/B,QAIA,kBAACP,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiBpI,UAAWD,EAAQ4I,aADtC,kBAIA,kBAACP,EAAA,EAAD,KACE,kBAAC,IAAD,CAAapI,UAAWD,EAAQ4I,aADlC,4B,qECtHF3D,GAAYC,aAAW,SAAAtD,GAAK,MAAK,CACrCf,KAAM,GACN4H,QAAS,GACTwC,WAAY,CACVnF,UAAWlE,EAAMmE,QAAQ,IAE3BmF,SAAU,CACRzI,YAAab,EAAMmE,QAAQ,IAE7BoF,MAAO,CACLrF,UAAWlE,EAAMmE,QAAQ,IAE3BqF,KAAM,CACJnJ,QAASL,EAAMmE,QAAQ,QAgFZsF,GA7EI,SAAAvL,GACjB,IAAQ0G,EAAiC1G,EAAjC0G,SAAUvG,EAAuBH,EAAvBG,UAAcmF,EAAhC,YAAyCtF,EAAzC,IAEME,EAAUiF,KAEVqG,EAAU,CACd,sBACA,sBACA,qBAGF,EAA4B7E,mBAAS6E,EAAQ,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OACE,kBAACvE,EAAA,EAAD,iBACM7B,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAAC+I,EAAA,EAAD,CAAYC,MAAM,gBAClB,kBAACC,EAAA,EAAD,MACA,kBAAChC,EAAA,EAAD,CAAajH,UAAWD,EAAQyI,SAC9B,kBAACjB,EAAA,EAAD,CACEC,WAAS,EACTpD,KAAK,SACLsD,SAjBa,SAAAd,GACnBA,EAAMC,UAEN0E,EAAU3E,EAAME,OAAOnC,QAejB6G,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvB/G,MAAO2G,EACP/F,QAAQ,YAEP8F,EAAQM,KAAI,SAAAL,GAAM,OACjB,4BACEM,IAAKN,EACL3G,MAAO2G,GAENA,OAIP,kBAAClD,EAAA,EAAD,CACEpI,UAAWD,EAAQiL,WACnBzF,QAAQ,aAER,kBAAC,KAAD,CAASvF,UAAWD,EAAQkL,WAJ9B,cAOA,kBAAC/B,EAAA,EAAD,CAAOlJ,UAAWD,EAAQmL,OACxB,kBAAC/B,EAAA,EAAD,KACG5C,EAASsF,OAAOF,KAAI,SAAAhE,GAAK,OACxB,kBAACyB,EAAA,EAAD,CAAUwC,IAAKjE,EAAMmE,IACnB,kBAACzC,EAAA,EAAD,CAAWrJ,UAAWD,EAAQoL,MAC3BY,KAAOpE,EAAMqE,YAAYC,OAAO,uBAEnC,kBAAC5C,EAAA,EAAD,CAAWrJ,UAAWD,EAAQoL,MAC3BxD,EAAMuE,sB,iFChFnBlH,GAAYC,aAAW,SAAAtD,GAAK,MAAK,CACrCf,KAAM,GACNuL,YAAa,CACXvK,QAAS,OACT6G,cAAe,SACfC,WAAY,cAEd0D,OAAQ,CACNvG,UAAWlE,EAAMmE,QAAQ,IAE3BuG,aAAc,CACZxG,UAAWlE,EAAMmE,QAAQ,GACzB5F,MAAOyB,EAAMgB,QAAQkB,MACrBN,gBAAiB5B,EAAMgB,QAAQ2J,MAAMhJ,KACrC,UAAW,CACTC,gBAAiB5B,EAAMgB,QAAQ2J,MAAMC,OAGzC5D,WAAY,CACVnG,YAAab,EAAMmE,QAAQ,QA8ChB0G,GA3CM,SAAA3M,GACnB,IAAQG,EAAuBH,EAAvBG,UAAcmF,EAAtB,YAA+BtF,EAA/B,IAEME,EAAUiF,KAEhB,OACE,kBAACgC,EAAA,EAAD,iBACM7B,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAAC+I,EAAA,EAAD,CAAYC,MAAM,kBAClB,kBAACC,EAAA,EAAD,MACA,kBAAChC,EAAA,EAAD,KACE,yBAAKjH,UAAWD,EAAQoM,aACtB,kBAAC/D,EAAA,EAAD,KACE,kBAAC,KAAD,CAAmBpI,UAAWD,EAAQ4I,aADxC,0BAIA,kBAACP,EAAA,EAAD,KACE,kBAAC,KAAD,CAAYpI,UAAWD,EAAQ4I,aADjC,uBAKF,kBAACvD,EAAA,EAAD,CACEpF,UAAWD,EAAQqM,OACnB7G,QAAQ,SAFV,uIAOA,kBAAC6C,EAAA,EAAD,CAAQpI,UAAWD,EAAQsM,cACzB,kBAAC,KAAD,CAAYrM,UAAWD,EAAQ4I,aADjC,8B,iBC3DF3D,GAAYC,aAAW,iBAAO,CAClCrE,KAAM,OAyDO6L,GAtDC,SAAA5M,GACd,IAAQG,EAAuBH,EAAvBG,UAAcmF,EAAtB,YAA+BtF,EAA/B,IAEME,EAAUiF,KAChB,EAAgCwB,qBAAhC,mBAAOD,EAAP,KAAiBmG,EAAjB,KAoBA,OAlBAC,qBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GAChDJ,GACFF,EAAYM,EAASC,KAAKC,YAOzB,WACLN,GAAU,KAEX,IAEErG,EAKH,kBAACY,EAAA,EAAD,iBACMhC,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,GAC9B4F,WAAS,EACTE,QAAS,IACT,kBAACqB,EAAA,EAAD,CAAMC,MAAI,EAAC+F,GAAI,EAAG9F,GAAI,EAAG+F,GAAI,EAAG9F,GAAI,IAClC,kBAAC,EAAD,CAAcf,SAAUA,KAE1B,kBAACY,EAAA,EAAD,CAAMC,MAAI,EAAC+F,GAAI,EAAG9F,GAAI,EAAG+F,GAAI,EAAG9F,GAAI,IAClC,kBAAC,GAAD,CAAUf,SAAUA,KAEtB,kBAACY,EAAA,EAAD,CAAMC,MAAI,EAAC+F,GAAI,EAAG9F,GAAI,EAAG+F,GAAI,EAAG9F,GAAI,IAClC,kBAAC,GAAD,CAAYf,SAAUA,KAExB,kBAACY,EAAA,EAAD,CAAMC,MAAI,EAAC+F,GAAI,EAAG9F,GAAI,EAAG+F,GAAI,EAAG9F,GAAI,IAClC,kBAAC,GAAD,QAnBG,M,wDCdLtC,GAAYC,aAAW,iBAAO,CAClCrE,KAAM,GACN4H,QAAS,CACPxG,QAAS,GAEXqL,MAAO,CACLC,SAAU,UA4GCtD,GAxGE,SAAAnK,GACf,IAAQG,EAAuBH,EAAvBG,UAAcmF,EAAtB,YAA+BtF,EAA/B,IAEME,EAAUiF,KAChB,EAAgCwB,mBAAS,IAAzC,mBAAOiD,EAAP,KAAiB8D,EAAjB,KAEAZ,qBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,wCAAwCC,MAAK,SAAAC,GACjDJ,GACFW,EAAYP,EAASC,KAAKxD,aAOzB,WACLmD,GAAU,KAEX,IAEH,IAAMY,EAAe,CACnBC,QAASvH,IAAOoD,OAAO,KACvBoE,KAAMxH,IAAOC,MAAM,KACnBwH,SAAUzH,IAAO2E,IAAI,MAGvB,OACE,yCACM1F,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAACgH,EAAA,EAAD,KACE,kBAAC+B,EAAA,EAAD,CACEtF,OAAQ,kBAAC,IAAD,MACRuF,MAAM,sBAER,kBAACC,EAAA,EAAD,MACA,kBAAChC,EAAA,EAAD,CAAajH,UAAWD,EAAQyI,SAC9B,kBAAC,KAAD,KACE,yBAAKxI,UAAWD,EAAQsN,OACtB,kBAACnE,EAAA,EAAD,KACE,kBAAC0E,GAAA,EAAD,KACE,kBAACxE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,WACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAWnC,MAAM,SAAjB,aAGJ,kBAACiC,EAAA,EAAD,KACGM,EAASkC,KAAI,SAAA/B,GAAO,OACnB,kBAACR,EAAA,EAAD,CAAUwC,IAAKhC,EAAQkC,IACrB,kBAACzC,EAAA,EAAD,SAAaO,EAAQkC,GAAG+B,MAAM,KAAKC,SACnC,kBAACzE,EAAA,EAAD,KACG0C,KAAOnC,EAAQmE,MAAM9B,OAAO,uBAE/B,kBAAC5C,EAAA,EAAD,KAAYO,EAAQsC,aACpB,kBAAC7C,EAAA,EAAD,KAAYO,EAAQoE,eACpB,kBAAC3E,EAAA,EAAD,KACGO,EAAQmB,SACRnB,EAAQjF,OAEX,kBAAC0E,EAAA,EAAD,KACE,kBAAC,IAAD,CACEnJ,MAAOsN,EAAa5D,EAAQqE,QAC5B1I,QAAQ,YAEPqE,EAAQqE,SAGb,kBAAC5E,EAAA,EAAD,CAAWnC,MAAM,SACf,kBAACkB,EAAA,EAAD,CACElI,MAAM,UACNmF,UAAW6I,KACX5N,KAAK,QACL6N,GAAI,yBACJ5I,QAAQ,YALV,qB,iBC1FlBP,GAAYC,aAAW,iBAAO,CAClCrE,KAAM,GACN4H,QAAS,CACPxG,QAAS,GAEXqL,MAAO,CACLC,SAAU,MAEZc,WAAY,CACVvM,MAAO,KAETwM,WAAY,CACVxM,MAAO,QAgFIyM,GA5EF,SAAAzO,GACX,IAAQG,EAAuBH,EAAvBG,UAAcmF,EAAtB,YAA+BtF,EAA/B,IAEME,EAAUiF,KAEhB,EAAwBwB,mBAAS,IAAjC,mBAAO+H,EAAP,KAAaC,EAAb,KAoBA,OAlBA7B,qBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,oCAAoCC,MAAK,SAAAC,GAC7CJ,GACF4B,EAAQxB,EAASC,KAAKsB,SAOrB,WACL3B,GAAU,KAEX,IAGD,yCACMzH,EADN,CAEEnF,UAAWW,YAAKZ,EAAQa,KAAMZ,KAE9B,kBAACgH,EAAA,EAAD,KACE,kBAAC+B,EAAA,EAAD,CAAYC,MAAM,kBAClB,kBAACC,EAAA,EAAD,MACA,kBAAChC,EAAA,EAAD,CAAajH,UAAWD,EAAQyI,SAC9B,kBAAC,KAAD,CAAkB6C,QAAS,CAAEoD,iBAAiB,IAC5C,yBAAKzO,UAAWD,EAAQsN,OACtB,kBAACnE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGoF,EAAK5C,KAAI,SAAA+C,GAAG,OACX,kBAACtF,EAAA,EAAD,CAAUwC,IAAK8C,EAAI5C,IACjB,kBAACzC,EAAA,EAAD,CAAWrJ,UAAWD,EAAQqO,YAC5B,kBAAChJ,EAAA,EAAD,CAAYG,QAAQ,MAAMmJ,EAAIC,SAEhC,kBAACtF,EAAA,EAAD,CAAWrJ,UAAWD,EAAQsO,YAC5B,kBAAC,IAAD,CACEnO,MACiB,MAAfwO,EAAIT,OACA/H,IAAOC,MAAM,KACbD,IAAO2E,IAAI,MAGhB6D,EAAIT,SAGT,kBAAC5E,EAAA,EAAD,KAAYqF,EAAIE,OAChB,kBAACvF,EAAA,EAAD,KAAYqF,EAAIG,MAChB,kBAACxF,EAAA,EAAD,CAAWnC,MAAM,SAASwH,EAAII,IAC9B,kBAACzF,EAAA,EAAD,CAAWnC,MAAM,SACd6E,KAAO2C,EAAI1C,YAAYC,OAAO,sCCvFjDjH,GAAYC,aAAW,SAAAtD,GAAK,MAAK,CACrCf,KAAM,CACJoB,QAASL,EAAMmE,QAAQ,IAEzBiJ,KAAM,CACJlJ,UAAWlE,EAAMmE,QAAQ,IAE3BkJ,QAAS,CACPzL,gBAAiB2C,IAAOtD,KAAK,MAE/B4F,QAAS,CACP3C,UAAWlE,EAAMmE,QAAQ,QA+DdmJ,GA3DmB,SAAApP,GAChC,IAAQqP,EAAmBrP,EAAnBqP,MAAOC,EAAYtP,EAAZsP,QACTpP,EAAUiF,KAChB,EAAoBkK,EAAME,OAAlBtD,EAAR,EAAQA,GAAIuD,EAAZ,EAAYA,IAMNN,EAAO,CACX,CAAEpK,MAAO,UAAW8C,MAAO,WAC3B,CAAE9C,MAAO,WAAY8C,MAAO,YAC5B,CAAE9C,MAAO,OAAQ8C,MAAO,SAG1B,OAAK4H,EAIAN,EAAKO,MAAK,SAAAC,GAAC,OAAIA,EAAE5K,QAAU0K,KAK9B,kBAAC,IAAD,CACErP,UAAWD,EAAQa,KACnBoI,MAAM,+BAEN,kBAAC,EAAD,MACA,kBAACwG,EAAA,EAAD,CACExP,UAAWD,EAAQgP,KACnBrH,SA1BmB,SAACd,EAAOjC,GAC/BwK,EAAQM,KAAK9K,IA0BT+K,cAAc,OACd/K,MAAO0K,EACP9J,QAAQ,cAEPwJ,EAAKpD,KAAI,SAAA0D,GAAG,OACX,kBAACM,EAAA,EAAD,CACE/D,IAAKyD,EAAI1K,MACT8C,MAAO4H,EAAI5H,MACX9C,MAAO0K,EAAI1K,YAIjB,kBAACsE,EAAA,EAAD,CAASjJ,UAAWD,EAAQiP,UAC5B,yBAAKhP,UAAWD,EAAQyI,SACb,YAAR6G,GAAqB,kBAAC,GAAD,MACb,aAARA,GAAsB,kBAAC,GAAD,MACd,SAARA,GAAkB,kBAAC,GAAD,QA5BhB,kBAAC,IAAD,CAAUlB,GAAG,sBAJb,kBAAC,IAAD,CAAUA,GAAE,gCAA2BrC,EAA3B","file":"static/js/7.d5e91328.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"\n}), 'PersonOutline');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardContent,\n  CardActions,\n  Grid,\n  Typography,\n  TextField,\n  Switch,\n  Button,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst CustomerEdit = props => {\n  const { open, onClose, customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    ...customer\n  });\n\n  if (!open) {\n    return null;\n  }\n\n  const handleFieldChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <form>\n          <CardContent>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              Edit Customer\n            </Typography>\n            <Grid\n              className={classes.container}\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleFieldChange}\n                  value={formState.email}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Full name\"\n                  name=\"name\"\n                  onChange={handleFieldChange}\n                  value={formState.name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Phone number\"\n                  name=\"phone\"\n                  onChange={handleFieldChange}\n                  value={formState.phone}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"State/Region\"\n                  name=\"state\"\n                  onChange={handleFieldChange}\n                  value={formState.state}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Country\"\n                  name=\"country\"\n                  onChange={handleFieldChange}\n                  value={formState.country}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Address 1\"\n                  name=\"address1\"\n                  onChange={handleFieldChange}\n                  value={formState.address1}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Address 2\"\n                  name=\"address2\"\n                  onChange={handleFieldChange}\n                  value={formState.address2}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item />\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Email Verified</Typography>\n                <Typography variant=\"body2\">\n                  Disabling this will automatically send the user a verification\n                  email\n                </Typography>\n                <Switch\n                  checked={formState.verified}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"verified\"\n                  onChange={handleFieldChange}\n                  value={formState.verified}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Discounted Prices</Typography>\n                <Typography variant=\"body2\">\n                  This will give the user discountedprices for all products\n                </Typography>\n                <Switch\n                  checked={formState.discountedPrices}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"discountedPrices\"\n                  onChange={handleFieldChange}\n                  value={formState.discountedPrices}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <Button\n              onClick={onClose}\n              variant=\"contained\"\n            >\n              Close\n            </Button>\n            <Button\n              className={classes.saveButton}\n              onClick={onClose}\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n};\n\nCustomerEdit.displayName = 'CustomerEdit';\n\nCustomerEdit.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nCustomerEdit.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CustomerEdit;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from 'components';\nimport { CustomerEdit } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst CustomerInfo = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer.email}\n                <div>\n                  <Label\n                    color={\n                      customer.verified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    {customer.verified\n                      ? 'Email verified'\n                      : 'Email not verified'}\n                  </Label>\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Phone</TableCell>\n              <TableCell>{customer.phone}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>State/Region</TableCell>\n              <TableCell>{customer.state}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Country</TableCell>\n              <TableCell>{customer.country}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Address 1</TableCell>\n              <TableCell>{customer.address1}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Address 2</TableCell>\n              <TableCell>{customer.address2}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions>\n      <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      />\n    </Card>\n  );\n};\n\nCustomerInfo.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nimport { Label } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst getSum = (invoices, type) => {\n  const filtered = invoices.filter(invoice => invoice.type === type);\n  const total = filtered\n    .reduce((total, invoice) => total + invoice.value, 0)\n    .toFixed(2);\n\n  return [filtered, total];\n};\n\nconst Invoices = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const handleEditOpen = () => {};\n\n  const [paidInvoices, paidTotal] = getSum(customer.invoices, 'paid');\n  const [draftInvoices, draftTotal] = getSum(customer.invoices, 'draft');\n  const [dueInvoices, dueTotal] = getSum(customer.invoices, 'due');\n  const [refundedInvoices, refundedTotal] = getSum(\n    customer.invoices,\n    'refunded'\n  );\n  const [incomeInvoices, incomeTotal] = getSum(customer.invoices, 'income');\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Invoices/Billing\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Auto CC Pay</TableCell>\n              <TableCell>\n                {customer.iban}\n                <div>\n                  <Label\n                    color={\n                      customer.autoCC ? colors.green[600] : colors.red[600]\n                    }\n                  >\n                    {customer.autoCC ? 'YES' : 'NO'}\n                  </Label>\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Paid</TableCell>\n              <TableCell>\n                {paidInvoices.length} ({customer.currency}\n                {paidTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Draft</TableCell>\n              <TableCell>\n                {draftInvoices.length} ({customer.currency}\n                {draftTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Unpaid/Due</TableCell>\n              <TableCell>\n                {dueInvoices.length} ({customer.currency}\n                {dueTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Refunded</TableCell>\n              <TableCell>\n                {refundedInvoices.length} ({customer.currency}\n                {refundedTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Gross Income</TableCell>\n              <TableCell>\n                {incomeInvoices.length} ({customer.currency}\n                {incomeTotal})\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <AttachMoneyIcon className={classes.buttonIcon} />\n          Create Invoice\n        </Button>\n        <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Generate Due Invoices\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {},\n  sendButton: {\n    marginTop: theme.spacing(2)\n  },\n  mailIcon: {\n    marginRight: theme.spacing(1)\n  },\n  table: {\n    marginTop: theme.spacing(2)\n  },\n  cell: {\n    padding: theme.spacing(1)\n  }\n}));\nconst SendEmails = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\n    'Resend last invoice',\n    'Send password reset',\n    'Send verification'\n  ];\n\n  const [option, setOption] = useState(options[0]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Send emails\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={handleChange}\n          select\n          // eslint-disable-next-line react/jsx-sort-props\n          SelectProps={{ native: true }}\n          value={option}\n          variant=\"outlined\"\n        >\n          {options.map(option => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Button\n          className={classes.sendButton}\n          variant=\"contained\"\n        >\n          <MaiIcon className={classes.mailIcon} />\n          Send email\n        </Button>\n        <Table className={classes.table}>\n          <TableBody>\n            {customer.emails.map(email => (\n              <TableRow key={email.id}>\n                <TableCell className={classes.cell}>\n                  {moment(email.created_at).format('DD/MM/YYYY | HH:MM')}\n                </TableCell>\n                <TableCell className={classes.cell}>\n                  {email.description}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nSendEmails.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default SendEmails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  mainActions: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  notice: {\n    marginTop: theme.spacing(1)\n  },\n  deleteButton: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.white,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\nconst OtherActions = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Other actions\" />\n      <Divider />\n      <CardContent>\n        <div className={classes.mainActions}>\n          <Button>\n            <NotInterestedIcon className={classes.buttonIcon} />\n            Close Customer Account\n          </Button>\n          <Button>\n            <GetAppIcon className={classes.buttonIcon} />\n            Export client data\n          </Button>\n        </div>\n        <Typography\n          className={classes.notice}\n          variant=\"body2\"\n        >\n          Remove this this customer’s data if he requested that, if not please\n          be aware that what has been deleted can never brough back\n        </Typography>\n        <Button className={classes.deleteButton}>\n          <DeleteIcon className={classes.buttonIcon} />\n          Delete Customer Account\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nOtherActions.propTypes = {\n  className: PropTypes.string\n};\n\nexport default OtherActions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { CustomerInfo, Invoices, SendEmails, OtherActions } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Summary = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [customer, setCustomer] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomer = () => {\n      axios.get('/api/management/customers/1/summary').then(response => {\n        if (mounted) {\n          setCustomer(response.data.summary);\n        }\n      });\n    };\n\n    fetchCustomer();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <CustomerInfo customer={customer} />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <Invoices customer={customer} />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <SendEmails customer={customer} />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <OtherActions />\n      </Grid>\n    </Grid>\n  );\n};\n\nSummary.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Summary;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Label, GenericMoreButton } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      axios.get('/api/management/customers/1/invoices').then(response => {\n        if (mounted) {\n          setInvoices(response.data.invoices);\n        }\n      });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Label } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  methodCell: {\n    width: 100\n  },\n  statusCell: {\n    width: 64\n  }\n}));\n\nconst Logs = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchLogs = () => {\n      axios.get('/api/management/customers/1/logs').then(response => {\n        if (mounted) {\n          setLogs(response.data.logs);\n        }\n      });\n    };\n\n    fetchLogs();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader title=\"Customer logs\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar options={{ suppressScrollY: true }}>\n            <div className={classes.inner}>\n              <Table>\n                <TableBody>\n                  {logs.map(log => (\n                    <TableRow key={log.id}>\n                      <TableCell className={classes.methodCell}>\n                        <Typography variant=\"h6\">{log.method}</Typography>\n                      </TableCell>\n                      <TableCell className={classes.statusCell}>\n                        <Label\n                          color={\n                            log.status === 200\n                              ? colors.green[600]\n                              : colors.red[600]\n                          }\n                        >\n                          {log.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell>{log.route}</TableCell>\n                      <TableCell>{log.desc}</TableCell>\n                      <TableCell align=\"right\">{log.IP}</TableCell>\n                      <TableCell align=\"right\">\n                        {moment(log.created_at).format('YYYY/MM/DD | hh:mm:ss')}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nLogs.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Logs;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport { Header, Summary, Invoices, Logs } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst CustomerManagementDetails = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    return <Redirect to={`/management/customers/${id}/summary`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management Details\"\n    >\n      <Header />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'summary' && <Summary />}\n        {tab === 'invoices' && <Invoices />}\n        {tab === 'logs' && <Logs />}\n      </div>\n    </Page>\n  );\n};\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n"],"sourceRoot":""}